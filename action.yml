name: 'Action_zhKong_composite'
description: 'Action'
inputs:
  ROUTER_MODEL:  
    description: 'MODEL'
    required: true
    default: 'AX6'
  COMPILE_CONFIG: 
    description: 'CONFIG'
    required: true
    default: 'AX6-20240325-avahi'
  FILES_CONFIG: 
    description: 
    required: false
    default: 'public'
#   PATH: 
#    description: 
#    required: true
#    default: 'public'   
#outputs:
#  random-number:
#    description: "Random number"
#    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Show system
      shell: bash
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        ulimit -a
        
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      shell: bash
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2 rename
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install zstd dwarves llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        sudo timedatectl set-timezone "Asia/Shanghai"
        df -h
        
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 100
        root-reserve-mb: 1280
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'        
     
    - name: Compile      
      shell: bash
      env:
        ROUTER_MODEL.: ${{ inputs.ROUTER_MODEL }}   
        COMPILE_CONFIG: ${{ inputs.COMPILE_CONFIG }} 
        FILES_CONFIG: ${{ inputs.FILES_CONFIG }} 
      run:  |
          echo "当前工作目录"
          pwd          
          #cd PATH         
          echo '当前执行步骤：1-下载AgustinLorenzo/openwrt仓库'
          git clone --depth 1  https://github.com/thinkcyy/OpenWRT-Action OpenWRT-Action 
          git clone --depth 1  https://github.com/AgustinLorenzo/openwrt -b main --single-branch ./OpenWRT-Action/openwrt
          tree -L 3
          
          echo '当前执行步骤：2-处理Package'
          cd ./OpenWRT-Action
          echo "当前工作目录"
          pwd 
          tree -L 3
          chmod +x ./zhKong/scripts/*.sh
          cp -vr ./zhKong/config/$COMPILE_CONFIG.config ./zhKong/config/config-$ROUTER_MODEL.config
          ./zhKong/scripts/prepare.sh
          
          echo '当前执行步骤：3-处理自定义配置files'
          echo $FILES_CONFIG
          if [ "$FILES_CONFIG" != 'public' ] ; then
             echo "files版本为$FILES_CONFIG"
             cp -vr ../openwrt-config/$ROUTER_MODEL/$FILES_CONFIG/files ./openwrt/
             cp -vr ../openwrt-config/commonfiles/files ./openwrt/
             cp -vr ../openwrt-config/$ROUTER_MODEL/commonfiles/files ./openwrt/
             chmod +x ./openwrt/files/etc/tinc/tincvpn/tinc-up
          else
             echo '-已选择public版本，跳过'
          fi          
          
          echo '当前执行步骤：4-编译'
          cd ./openwrt
          echo '当前执行步骤：4.1-下载'
          make download -j$(nproc)
          echo '当前执行步骤：4.2-编译'
          make -j$(nproc) || make -j1 V=s
          
          echo '当前执行步骤：5-打标'
          if [ "$FILES_CONFIG" != 'public' ] ; then
             tag_name=$COMPILE_CONFIG-$FILES_CONFIG
          else
             tag_name=$COMPILE_CONFIG
          fi
          tag_name=$tag_name-$(date +%Y%m%d-%H%M)
          echo $tag_name
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV  
                   
          echo '当前执行步骤：6-组织产出文件'
          echo "当前工作目录"
          pwd
          cd ../
          rm -rf ./artifact/
          mkdir -p ./artifact/
          cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*sysupgrade*") ./artifact/
          cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo") ./artifact/
          cp -vr ./openwrt/.config ./artifact/defconfig-$COMPILE_CONFIG.config
          cd ./artifact/
          rename 's/sysupgrade.bin/sysupgrade-$tag_name.bin/' *
          ls -Ahl
          
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-${{ env.COMPILE_CONFIG }}-${{ env.FILES_CONFIG }}-${{ env.TAG_NAME }}
        path: ./OpenWRT-Action/artifact/
